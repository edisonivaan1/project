const fs = require('fs');
const path = require('path');

console.log('üîç Verificando configuraci√≥n de despliegue...\n');

// Verificar archivos cr√≠ticos
const criticalFiles = [
  'dist/index.html',
  'dist/_headers',
  'dist/.htaccess',
  'dist/assets/index-D7Oh-sbe.js',
  'dist/assets/vendor-CyvzqkFf.js',
  'dist/assets/router-Br9iBMqv.js',
  'dist/assets/index-C-KxpyJJ.css'
];

console.log('üìÅ Verificando archivos cr√≠ticos:');
criticalFiles.forEach(file => {
  if (fs.existsSync(file)) {
    const stats = fs.statSync(file);
    console.log(`‚úÖ ${file} (${(stats.size / 1024).toFixed(2)} KB)`);
  } else {
    console.log(`‚ùå ${file} - NO ENCONTRADO`);
  }
});

console.log('\nüîß Verificando configuraci√≥n de tipos MIME:');

// Verificar archivo _headers
if (fs.existsSync('dist/_headers')) {
  const headersContent = fs.readFileSync('dist/_headers', 'utf8');
  const hasJsMime = headersContent.includes('*.js') && headersContent.includes('application/javascript');
  const hasCssMime = headersContent.includes('*.css') && headersContent.includes('text/css');
  const hasAudioMime = headersContent.includes('*.mp3') && headersContent.includes('audio/mpeg');
  
  console.log(`‚úÖ _headers configurado correctamente`);
  console.log(`   - JavaScript MIME: ${hasJsMime ? '‚úÖ' : '‚ùå'}`);
  console.log(`   - CSS MIME: ${hasCssMime ? '‚úÖ' : '‚ùå'}`);
  console.log(`   - Audio MIME: ${hasAudioMime ? '‚úÖ' : '‚ùå'}`);
} else {
  console.log('‚ùå Archivo _headers no encontrado');
}

// Verificar archivo .htaccess
if (fs.existsSync('dist/.htaccess')) {
  const htaccessContent = fs.readFileSync('dist/.htaccess', 'utf8');
  const hasJsAddType = htaccessContent.includes('AddType application/javascript .js');
  const hasRewriteRule = htaccessContent.includes('RewriteRule');
  
  console.log(`‚úÖ .htaccess configurado correctamente`);
  console.log(`   - JavaScript AddType: ${hasJsAddType ? '‚úÖ' : '‚ùå'}`);
  console.log(`   - RewriteRule para SPA: ${hasRewriteRule ? '‚úÖ' : '‚ùå'}`);
} else {
  console.log('‚ùå Archivo .htaccess no encontrado');
}

console.log('\nüåê Verificaci√≥n para GitHub Pages:');
console.log('‚úÖ Base path configurado como /project/');
console.log('‚úÖ Archivos est√°ticos en dist/');
console.log('‚úÖ Configuraci√≥n de tipos MIME en _headers');
console.log('‚úÖ Configuraci√≥n de SPA en .htaccess');

console.log('\nüöÄ Comandos para probar:');
console.log('1. npm run serve (servidor local)');
console.log('2. npm run dev (desarrollo)');
console.log('3. npm run preview (preview de producci√≥n)');

console.log('\nüìã Para GitHub Pages:');
console.log('1. Subir contenido de dist/ a la rama gh-pages');
console.log('2. Verificar que _headers est√© incluido');
console.log('3. Esperar unos minutos para que se apliquen los cambios');

console.log('\nüîç Para verificar en el navegador:');
console.log('1. Abrir herramientas de desarrollo (F12)');
console.log('2. Ir a la pesta√±a Network');
console.log('3. Recargar la p√°gina');
console.log('4. Verificar que los archivos .js tengan Content-Type: application/javascript');

console.log('\nüìû Si el sitio no aparece:');
console.log('1. Verificar que el repositorio est√© configurado para GitHub Pages');
console.log('2. Verificar que la rama gh-pages contenga los archivos de dist/');
console.log('3. Verificar que el archivo _headers est√© en la ra√≠z del repositorio');
console.log('4. Esperar 5-10 minutos para que GitHub Pages actualice la configuraci√≥n'); 